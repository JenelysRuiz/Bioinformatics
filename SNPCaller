#!/bin/bash
#Module for comparing software and parameters for variant calling
#Dependencies: Bowtie2, SAMtools, BBTools, gb2tab, standard unix, python-2.7+, perl

#Path to most programs. Modify if needed.
dirpath="../../../../opt"


alnoptions=("Bowtie2" "Bwa-mem")
suboptions=("SingleRead" "ReadPair")
  
select alnopt in "${alnoptions[@]}"
do
    case $alnopt in
        "Bowtie2")
select subopt in "${suboptions[@]}"
do
    case $subopt in

	"SingleRead")
echo "Select your reference (.fna) and read (.fastq) files; include path."
echo "Note: You may choose from the following files in this directory and/or 
subdirectories "
ls -L | find . -name "*.fa" -o -name "*.faa" -o -name "*.fna" -o -name "*.ffn" -o -name "*.frn"
read -p "Reference : " ref
ls -L | find . -name "*.fastq"
read -p "Read : " read
clear
echo "Select a name for your build, sortedbam, and vcf."
read -p "BuildName : " build
read -r -p "Do you wish to run GATK as well? [y/N] : " response
cmd="sort"
if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]] && [ -r $ref ] && [ -r $read ] ; then

#Bowtie2 Alignment
echo $ref $build | bowtie2-build $ref $build
echo $build $read | bowtie2 -x $build $read --threads 16 -S $build.sam > $build.aln.txt
echo $build | samtools view -bS $build.sam -@ 16 > $build.bam

#GATK VCF:
echo $ref | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar CreateSequenceDictionary R= $ref O= $ref.dict
echo $build | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar AddOrReplaceReadGroups  INPUT= $build.sam OUTPUT= $build.fixed.sam RGID=1  RGLB= library1  RGPL=illumina RGPU=1  RGSM=sample1 SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.sam
echo $build | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar SortSam I= $build.fixed.sam  O= $build.fixed.sorted.bam SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.fixed.sam
echo $ref $build | java -Djava.io.tmpdir=../../tmp -jar $dirpath/GenomeAnalysisTK.jar -nct 16 -T HaplotypeCaller -R $ref -I $build.fixed.sorted.bam -stand_call_conf 30 -stand_emit_conf 10 -o $build.gatk.vcf
echo $build | rm $build.fixed.sorted.bam
#Filter
echo $build | vcftools --vcf $build.gatk.vcf --recode --recode-INFO-all --out $build.gatk --minQ 20.00
echo $build | bcftools stats $build.gatk.recode.vcf > $build.filteredbowtiegatkvcf.txt
echo $build | rm $build.gatk.vcf

#Samtools VCF:
echo $cmd $build | samtools $cmd $build.bam $build.sorted -@ 16
echo $build | rm $build.bam
echo $ref $build | samtools mpileup -uf $ref $build.sorted.bam | bcftools call -c > $build.samtools.vcf
echo $build | rm $build.sorted.bam
#Filter
echo $build | vcftools --vcf $build.samtools.vcf --recode --recode-INFO-all --out $build.samtools --minQ 20.00
echo $build | bcftools stats $build.samtools.recode.vcf > $build.filteredbowtiesamtoolsvcf.txt
echo $build | rm $build.samtools.vcf
exit 0

elif [[ $response =~ ^([nN][oO]|[nN])$ ]] && [ -r $ref ] && [ -r $read ] ; then
echo $ref $build | bowtie2-build $ref $build
echo $build $read | bowtie2 -x $build $read --threads 16 -S $build.sam > $build.aln.txt
echo $build | samtools view -bS $build.sam > $build.bam
echo $build | rm $build.sam
echo $cmd $build | samtools $cmd $build.bam $build.sorted -@ 16
echo $build | rm $build.bam
echo $ref $build | samtools mpileup -uf $ref $build.sorted.bam | bcftools call -c > $build.samtools.vcf
echo $build | rm $build.sorted.bam 
echo $build | vcftools --vcf $build.samtools.vcf --recode --recode-INFO-all --out $build.samtools --minQ 20.00
echo $build | bcftools stats $build.samtools.recode.vcf > $build.filteredbowtiesamtoolsvcf.txt
echo $build | rm $build.samtools.vcf
exit 0

else 
echo "Outputs missing and/or truncated, please verify inputs"
exit 1
fi

;;

	"ReadPair")
echo "Select your reference (.fna) and read (.fastq) files; include path."
echo "Note: You may choose from the following files in this directory and/or 
subdirectories "
ls -L | find . -name "*.fa" -o -name "*.faa" -o -name "*.fna" -o -name "*.ffn" -o -name "*.frn"
read -p "Reference : " ref
ls -L | find . -name "*.fastq"
read -p "Read_1 : " read_1
read -p "Read_2 : " read_2
clear
echo "Select a name for your build, sortedbam, and vcf."
read -p "BuildName : " build
read -r -p "Do you wish to run GATK as well? [y/N] : " response
cmd="sort"
if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]] && [ -r $ref ] && [ -r $read_1 ] && [ -r $read_2 ] ; then

#Bowtie2 Alignment
echo $ref $build | bowtie2-build $ref $build
echo $build $read_1 $read_2 | bowtie2 -x $build -1 $read_1 -2 $read_2 --threads 16 -S $build.sam > $build.aln.txt
echo $build | samtools view -bS $build.sam -@ 16 > $build.bam

#GATK VCF:
echo $ref | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar CreateSequenceDictionary R= $ref O= $ref.dict
echo $build | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar AddOrReplaceReadGroups  INPUT= $build.sam OUTPUT= $build.fixed.sam RGID=1  RGLB= library1  RGPL=illumina RGPU=1  RGSM=sample1 SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.sam
echo $build | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar SortSam I= $build.fixed.sam  O= $build.fixed.sorted.bam SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.fixed.sam
echo $ref $build | java -Djava.io.tmpdir=../../tmp -jar $dirpath/GenomeAnalysisTK.jar -nct 16 -T HaplotypeCaller -R $ref -I $build.fixed.sorted.bam -stand_call_conf 30 -stand_emit_conf 10 -o $build.gatk.vcf
echo $build | rm $build.fixed.sorted.bam
#Filter
echo $build | vcftools --vcf $build.gatk.vcf --recode --recode-INFO-all --out $build.gatk --minQ 20.00
echo $build | bcftools stats $build.gatk.recode.vcf > $build.filteredbowtiegatkvcf.txt
echo $build | rm $build.gatk.vcf

#Samtools VCF:
echo $cmd $build | samtools $cmd $build.bam $build.sorted -@ 16
echo $build | rm $build.bam
echo $ref $build | samtools mpileup -uf $ref $build.sorted.bam | bcftools call -c > $build.samtools.vcf
echo $build | rm $build.sorted.bam
#Filter
echo $build | vcftools --vcf $build.samtools.vcf --recode --recode-INFO-all --out $build.samtools --minQ 20.00
echo $build | bcftools stats $build.samtools.recode.vcf > $build.filteredbowtiesamtoolsvcf.txt
echo $build | rm $build.samtools.vcf
exit 0

elif [[ $response =~ ^([nN][oO]|[nN])$ ]] && [ -r $ref ] && [ -r $read ] ; then
echo $ref $build | bowtie2-build $ref $build
echo $build $read_1 $read_2 | bowtie2 -x $build -1 $read_1 -2 $read_2 --threads 16 -S $build.sam > $build.aln.txt
echo $build | samtools view -bS $build.sam -@ 16 > $build.bam
echo $build | rm $build.sam
echo $cmd $build | samtools $cmd $build.bam $build.sorted -@ 16
echo $build | rm $build.bam
echo $ref $build | samtools mpileup -uf $ref $build.sorted.bam | bcftools call -c > $build.samtools.vcf
echo $build | rm $build.sorted.bam 
echo $build | vcftools --vcf $build.samtools.vcf --recode --recode-INFO-all --out $build.samtools --minQ 20.00
echo $build | bcftools stats $build.samtools.recode.vcf > $build.filteredbowtiesamtoolsvcf.txt
echo $build | rm $build.samtools.vcf
exit 0

else 
echo "Outputs missing and/or truncated, please verify inputs"
exit 1
fi
;;

*) echo invalid option;;

esac
done

;;
	"Bwa-mem")

echo "Select your reference (.fna) and read (.fastq) files; include path."
echo "Note: You may choose from the following files in this directory and/or 
subdirectories "
ls -L | find . -name "*.fa" -o -name "*.faa" -o -name "*.fna" -o -name "*.ffn" -o -name "*.frn"
read -p "Reference : " ref
ls -L | find . -name "*.fastq"
echo "For a single read alignment, leave 'Read_2' empty and hit enter"
read -p "Read_1 : " read_1
read -p "Read_2 : " read_2
clear
echo "Select a name for your build, sortedbam, and vcf."
read -p "BuildName : " build
cmd="sort"
if [ -r $ref ] ; then

#Bwa mem alignment
echo $ref | bwa index -a $ref
echo $ref $read_1 $read_2 $build | bwa mem -M $ref $read_1 $read_2 > $build.sam
echo $build | samtools view -bS $build.sam > $build.bam

#GATK VCF:
echo $ref | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar CreateSequenceDictionary R= $ref O= $ref.dict
echo $build | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar AddOrReplaceReadGroups  INPUT= $build.sam OUTPUT= $build.fixed.sam RGID=1  RGLB= library1  RGPL=illumina RGPU=1  RGSM=sample1 SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.sam
echo $build | java -Djava.io.tmpdir=../../tmp -XX:ParallelGCThreads=16 -jar $dirpath/picard-tools-2.0.1/picard.jar SortSam I= $build.fixed.sam  O= $build.fixed.sorted.bam SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.fixed.sam
echo $ref $build | java -Djava.io.tmpdir=../../tmp -jar $dirpath/GenomeAnalysisTK.jar -nct 16 -T HaplotypeCaller -R $ref -I $build.fixed.sorted.bam -stand_call_conf 30 -stand_emit_conf 10 -o $build.gatk.vcf
echo $build | rm $build.fixed.sorted.bam

#Filtering based on Quality
echo $build | vcftools --vcf $build.gatk.vcf --recode --recode-INFO-all --out $build.bwagatk --minQ 20.00
echo $build | bcftools stats $build.bwagatk.recode.vcf > $build.filteredbwagatkvcf.txt
echo $build | rm $build.gatk.vcf

#Samtools VCF:
echo $cmd $build | samtools $cmd $build.bam $build.sorted -@ 16
echo $build | rm $build.bam
echo $ref $build | samtools mpileup -uf $ref $build.sorted.bam | bcftools call -c > $build.bwasamtools.vcf
echo $build | rm $build.sorted.bam

#Filter
echo $build | vcftools --vcf $build.bwasamtools.vcf --recode --recode-INFO-all --out $build.bwasamtools --minQ 20.00
echo $build | bcftools stats $build.bwasamtools.recode.vcf > $build.filteredbwasamtoolsvcf.txt
echo $build | rm $build.bwasamtools.vcf

exit 0
else 
echo "Outputs missing and/or truncated, please verify inputs"
exit 1
fi

;;

	*) echo invalid option;;

esac
done
	    ;;
