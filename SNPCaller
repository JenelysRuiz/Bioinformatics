#!/bin/bash

#Compares alignment and VCF methods results for transition transversion ratio.

PS3='Enter your choice: '
options=("Bowtie2" "Bwa-mem")

select opt in "${options[@]}"
do
    case $opt in
        "Bowtie2")
echo "Select your reference (.fna) and read (.fastq) files; include path."
echo "Note: You may choose from the following files in this directory and/or 
subdirectories "
ls -L | find . -name "*.fa" -o -name "*.faa" -o -name "*.fna" -o -name "*.ffn" -o -name "*.frn"
read -p "Reference : " ref
ls -L | find . -name "*.fastq"
read -p "Read_1 : " read_1
read -p "Read_2 : " read_2
clear
echo "Select a name for your build, sortedbam, and vcf."
read -p "BuildName :" build
cmd="sort"
if [ -r $ref ] && [ -r $read_1 ] && [ -r $read_2 ] ; then

#Bowtie2 Alignment
echo $ref $build | bowtie2-build $ref $build
echo $build $read_1 $read_2 | bowtie2 -x $build -1 $read_1 $read_2 --threads 16 -S $build.sam > $build.aln.txt
echo $build | samtools view -bS $build.sam -@ 16 > $build.bam

#GATK VCF:
echo $ref | java -jar ../../../../opt/picard-tools-2.0.1/picard.jar CreateSequenceDictionary R= $ref O= $ref.dict
echo $build | java -jar ../../../../opt/picard-tools-2.0.1/picard.jar AddOrReplaceReadGroups  INPUT= $build.sam OUTPUT= $build.fixed.sam RGID=1  RGLB= library1  RGPL=illumina RGPU=1  RGSM=sample1 SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.sam
echo $build | java -jar ../../../../opt/picard-tools-2.0.1/picard.jar SortSam I= $build.fixed.sam  O= $build.fixed.sorted.bam SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.fixed.sam
echo $ref $build | java -jar ../../../../opt/GenomeAnalysisTK.jar -T HaplotypeCaller -R $ref -I $build.fixed.sorted.bam -stand_call_conf 30 -stand_emit_conf 10 -o $build.gatk.vcf
echo $build | rm $build.fixed.sorted.bam
echo $build | bcftools stats $build.gatk.vcf > $build.gatkvcf.txt

#Samtools VCF:
echo $cmd $build | samtools $cmd $build.bam $build.sorted -@ 16
echo $build | rm $build.bam
echo $build | samtools index $build.sorted
echo $build | java -XX:ParallelGCThreads=16 -jar picard.jar MarkDuplicates INPUT=$build.sorted OUTPUT=$build.bam METRICS_FILE=metrics.txt REMOVE_DUPLICATES=true VALIDATION_STRINGENCY=LENIENT
echo $build $ref | java -XX:ParallelGCThreads=16 -jar GenomeAnalysisTK.jar -T RealignerTargetCreator -R $ref -I $build.bam -o Intervals.txt
echo $ref $build | java -XX:ParallelGCThreads=16 -jar GenomeAnalysisTK.jar -T IndelRealigner -R $ref -I $build.bam -targetIntervals Intervals.txt -o $NoDupRealigned.bam
echo $ref $NoDupRealigned.bam | samtools mpileup -uf $ref $NoDupRealigned.bam | bcftools call -c > $build.samtools.vcf
echo $build.samtools.vcf | vcftools --vcf $build.samtools.vcf --recode --recode-INFO-all --out $build --minQ 20.00 #The output adds '.recode.vcf' to the specified name
echo $build | rm $NoDupRealigned.bam
echo $build | bcftools stats $build.recode.vcf > $build.samtools.txt
exit 0
else 
echo "Outputs missing and/or truncated, please verify inputs"
exit 1

;;
    "Bwa-mem")

echo "Select your reference (.fna) and read (.fastq) files; include path."
echo "Note: You may choose from the following files in this directory and/or 
subdirectories "
ls -L | find . -name "*.fa" -o -name "*.faa" -o -name "*.fna" -o -name "*.ffn" -o -name "*.frn"
read -p "Reference : " ref
ls -L | find . -name "*.fastq"
read -p "Read_1 : " read_1
read -p "Read_2 : " read_2
clear
echo "Select a name for your build, sortedbam, and vcf."
read -p "BuildName :" build
cmd="sort"
if [ -r $ref ] && [ -r $read_1 ] && [ -r $read_2 ] ; then

#Bwa mem alignment
echo $ref | bwa index -a $ref
echo $ref $read_1 $read_2 $build | bwa mem -M $ref $read_1 $read_2 > $build.sam
echo $build | samtools view -bS $build.sam > $build.bam

#GATK VCF:
echo $ref | java -jar ../../../../opt/picard-tools-2.0.1/picard.jar CreateSequenceDictionary R= $ref O= $ref.dict
echo $build | java -jar ../../../../opt/picard-tools-2.0.1/picard.jar AddOrReplaceReadGroups  INPUT= $build.sam OUTPUT= $build.fixed.sam RGID=1  RGLB= library1  RGPL=illumina RGPU=1  RGSM=sample1 SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.sam
echo $build | java -jar ../../../../opt/picard-tools-2.0.1/picard.jar SortSam I= $build.fixed.sam  O= $build.fixed.sorted.bam SORT_ORDER=coordinate CREATE_INDEX=TRUE VALIDATION_STRINGENCY=LENIENT
echo $build | rm $build.fixed.sam
echo $ref $build | java -jar ../../../../opt/GenomeAnalysisTK.jar -T HaplotypeCaller -R $ref -I $build.fixed.sorted.bam -stand_call_conf 30 -stand_emit_conf 10 -o $build.gatk.vcf
echo $build | rm $build.fixed.sorted.bam
echo $build | bcftools stats $build.gatk.vcf > $build.gatkvcf.txt

#Samtools VCF:
echo $cmd $build | samtools $cmd $build.bam $build.sorted -@ 16
echo $build | rm $build.bam
echo $build | samtools index $build.sorted
echo $build | java -XX:ParallelGCThreads=16 -jar picard.jar MarkDuplicates INPUT=$build.sorted OUTPUT=$build.bam METRICS_FILE=metrics.txt REMOVE_DUPLICATES=true VALIDATION_STRINGENCY=LENIENT
echo $build $ref | java -XX:ParallelGCThreads=16 -jar GenomeAnalysisTK.jar -T RealignerTargetCreator -R $ref -I $build.bam -o Intervals.txt
echo $ref $build | java -XX:ParallelGCThreads=16 -jar GenomeAnalysisTK.jar -T IndelRealigner -R $ref -I $build.bam -targetIntervals Intervals.txt -o $NoDupRealigned.bam
echo $ref $NoDupRealigned.bam | samtools mpileup -uf $ref $NoDupRealigned.bam | bcftools call -c > $build.samtools.vcf
echo $build.samtools.vcf | vcftools --vcf $build.samtools.vcf --recode --recode-INFO-all --out $build --minQ 20.00 #The output adds '.recode.vcf' to the specified name
echo $build | rm $NoDupRealigned.bam
echo $build | bcftools stats $build.recode.vcf > $build.samtools.txt
exit 0
else 
echo "Outputs missing and/or truncated, please verify inputs"
exit 1


;;

    *)
echo "Please choose a valid input"
;;

esac
done
